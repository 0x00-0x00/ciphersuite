#!/usr/bin/env python

import math, pyperclip, argparse

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--string", help="String to decode", required=True)
    parser.add_argument("-n", "--key", help="Key to use", required=True,
            type=int)
    args = parser.parse_args()
    print(decryptMessage(args.key, args.string))
    return 0

def decryptMessage(key, message):
    numOfColumns = int(math.ceil(len(message) / key))
    numOfRows = key
    numOfShadedBoxes = (numOfColumns * numOfRows) - len(message)
    plaintext = [''] * numOfColumns

    col = 0
    row = 0

    for symbol in message:
        plaintext[col] += symbol
        col += 1
        if ( col == numOfColumns ) or (col == numOfColumns - 1 and row >= numOfRows - numOfShadedBoxes):
            col = 0
            row += 1
    return ''.join(plaintext)


if __name__ == "__main__":
    main()
